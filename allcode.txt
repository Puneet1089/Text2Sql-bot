app.py ka code 

import streamlit as st
import sqlite3
import pandas as pd  # ‚úÖ import pandas
from sql_generator import generate_sql

with open("schema.txt", "r") as f:
    schema = f.read()

conn = sqlite3.connect("db.sqlite")
cursor = conn.cursor()

st.title("üß† Text-to-SQL Bot using OpenAI")

question = st.text_input("Ask a question:")

if st.button("Generate and Run"):
    sql = generate_sql(question, schema)

    # üî• Clean unwanted markdown-style formatting
    sql = sql.replace("```sql", "").replace("```", "").strip()

    st.subheader("üßæ SQL Generated:")
    st.code(sql, language="sql")

    try:
        cursor.execute(sql)
        data = cursor.fetchall()
        cols = [desc[0] for desc in cursor.description]

        # ‚úÖ Convert to pandas DataFrame
        df = pd.DataFrame(data, columns=cols)

        st.subheader("üìä Result:")
        st.dataframe(df)  # ‚úÖ Use cleaned DataFrame
    except Exception as e:
        st.error(f"‚ùå Error: {e}")


sql_generator.py ka code 

from openai import OpenAI
import api_key  

client = OpenAI(
    api_key=api_key.API_KEY,
    base_url="https://api.a4f.co/v1"
)

def generate_sql(user_question, schema):
    prompt = f"""
Convert this question to an SQL query:
Schema:
{schema}

Question:
{user_question}

SQL:
"""
    response = client.chat.completions.create(
        model="provider-5/gpt-4.1-nano",
        messages=[
            {"role": "user", "content": prompt}
        ]
    )
    return response.choices[0].message.content.strip()


setup_db.py ka code 

import sqlite3

conn = sqlite3.connect("db.sqlite")
cursor = conn.cursor()

cursor.executescript("""
DROP TABLE IF EXISTS customers;
DROP TABLE IF EXISTS orders;

CREATE TABLE customers (
    id INTEGER PRIMARY KEY,
    name TEXT
);

CREATE TABLE orders (
    id INTEGER PRIMARY KEY,
    customer_id INTEGER,
    amount REAL,
    date TEXT,
    FOREIGN KEY (customer_id) REFERENCES customers(id)
);

INSERT INTO customers (name) VALUES ('John'), ('Sara'), ('Amit');
INSERT INTO orders (customer_id, amount, date) VALUES
(1, 500, '2023-01-01'),
(1, 300, '2023-01-02'),
(2, 700, '2023-02-01');
""")

conn.commit()
conn.close()

print("‚úÖ Database created successfully!")

api_key.py ka content

API_KEY = "ddc-a4f-c4ef0c3626984ccda96f8fe22ea606ff"  # Paste your key here

requirement.txt ka content

openai
streamlit

schema.txt

customers(id, name)
orders(id, customer_id, amount, date)


bhai ab sun ye raha sara code jo maine likha hai 
ab muje ye sab samja de aache se aur ye bata ye kaise connected hai apas me 
aur ek ek line bhaut easy me samja de jaise ye sql_generator.py kaise connected hai schema.txt se
aur ye app.py ka code kaise chal raha hai sab kuch bata de hai
esa bata de ki mai confidently job interviews me iske bare me bata saku 
aur sun ye jo main functions aur libraries used hai jaise streamlit aur pandas wagera 
inke bare me bhi kuch sahi sa bata de 
